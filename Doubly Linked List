#include<iostream>

struct node{
  int val;
  struct node* prev;
  struct node* next;
};

struct node* head=NULL;

void insert_end(int x){
  struct node* newnode;
  struct node* temp;
  newnode = (struct node*)malloc(sizeof(struct node));
  newnode -> val = x;
  newnode->prev=NULL;
  newnode->next = NULL;
  if(head==NULL){
    head = newnode;
    return;
  }
  else{
    temp = head;
    while(temp->next!=NULL){
      temp = temp -> next;
    }
    temp -> next = newnode;
    newnode->prev = temp;
    return;
  }
}

void insert_beg(int x){
  struct node* newnode;
  newnode = (struct node*)malloc(sizeof(struct node));
  newnode-> val = x;
  newnode-> next = NULL;
  newnode->prev = NULL;
  newnode->next = head;
  head->prev = newnode;
  head = newnode;
}

void insert_n(int x, int n){
  struct node* newnode;
  struct node* temp;
  struct node* temp2;
  newnode = (struct node*)malloc(sizeof(struct node));
  newnode->val = x;
  newnode->next = NULL;
  newnode->prev = NULL;
  temp = head;
  for(int i=0; i<n-2; i++){
    temp = temp -> next;
  }
  temp2 = temp->next;
  temp -> next = newnode;
  newnode->prev = temp;
  newnode -> next = temp2;
  temp2->prev = newnode;
}

void delete_end(){
  struct node* temp;  
  struct node* temp2=NULL;
  temp = head;
  while(temp->next->next!=NULL){
    temp = temp->next;
  }
  temp->next = temp2;
  temp->next =  NULL;
  free(temp2);
}

void delete_beg(){
  struct node* temp = NULL;
  temp = head;
  head = head->next;
  head->prev = NULL;
  free(temp);
}

void display(){
  struct node* temp;
  temp = head;
  while(temp->next!=NULL){
    printf("%d ", temp->val);
    temp = temp -> next;
  }
  printf("%d ", temp->val);
}

int main(){
  insert_end(3);
  insert_end(4);
  insert_end(5);
  insert_beg(3);
  insert_beg(4);
  insert_beg(5);
  display();
  printf("\n");
  insert_n(2, 4);
  display();
  printf("\n");
  delete_end();
  delete_beg();
  display();
}
